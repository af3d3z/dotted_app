name: Build Unsigned iOS IPA for Sideload

on:
  push:
    tags:
      - 'v*'

env:
  IOS_DEPLOYMENT_TARGET: '13.0'

jobs:
  build-ios-unsigned:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache pub packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .flutter-pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.1'

      - name: Get dependencies & clean
        run: |
          flutter pub get
          flutter clean
          flutter pub get

      - name: Build unsigned IPA
        run: flutter build ipa --no-codesign --release

      - name: Package .app into IPA (if not already present)
        run: |
          # If Flutter emitted an IPA, we're done
          if ls build/ios/ipa/*.ipa 1> /dev/null 2>&1; then
            echo "Unsigned IPA already exists."
          else
            # Find the .xcarchive produced by flutter
            ARCHIVE=$(find build/ios -name '*.xcarchive' | head -n1)
            if [ -z "$ARCHIVE" ]; then
              echo "Error: No .xcarchive found under build/ios" >&2
              exit 1
            fi

            APP="$ARCHIVE/Products/Applications/Runner.app"
            if [ ! -d "$APP" ]; then
              echo "Error: Runner.app not found at $APP" >&2
              exit 1
            fi

            mkdir -p Payload
            cp -r "$APP" Payload/
            zip -r Runner.ipa Payload
            mv Runner.ipa build/ios/ipa/
          fi

      - name: Find IPA
        id: find_ipa
        run: |
          IPA_PATH=$(find build/ios/ipa -name '*.ipa' | head -n1)
          echo "ipa_path=$IPA_PATH" >> $GITHUB_OUTPUT

      - name: Create GitHub Release & Upload unsigned IPA
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.find_ipa.outputs.ipa_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
